openapi: 3.0.2
info:
  version: 'v1'
  title: '${project.name}'
  description: |
    ${project.description}
  license:
    name: '${license.name}'
    url: '${license.url}'
servers:
  #  /api must match servlet-mapping in web.xml
  - url: '/${project.artifactId}/v1'
    description: 'Version 1'

paths:

  # The ping service should be in all projects, should not do any advanced processing
  # and should respond quickly with a simple message, e.g. "pong".
  #
  # Note that it is placed under /monitor. The top namespace /monitor is intended for
  # proxying to monitoring software or manual health checks. All endpoints under that
  # namespace should be safe to expose: No changes to state, no confidential information!
  #
  # Note that the more detailed /monitor/status is defined below.
  /monitor/ping:
    get:
      tags:
        - '${project.name}'
      summary: 'Ping the server to check if the server is reachable.'
      operationId: ping
      x-useGenericResponse: false # If enabled the method will return Response
      x-streamingOutput: false # If enabled the method will return StreamingOutput.
      responses:
        '200':
          description: 'OK'
          content:
            text/plain:
              schema:
                type: string
        '406':
          description: 'Not Acceptable'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: 'Internal Error'
          content:
            text/plain:
              schema:
                type: string

  # The status service should be in all projects and should provide a list of running jobs,
  # the overall health of the service and similar. While the endpoint should be kept at
  # /monitor/status, the response should be adjusted to fit the application.
  #
  # Note that it is placed under /monitor. The top namespace /monitor is intended for
  # proxying to monitoring software or manual health checks. All endpoints under that
  # namespace should be safe to expose: No changes to state, no confidential information!
  #
  # Note that the simple /monitor/ping is defined above.
  /monitor/status:
    get:
      tags:
        - '${project.name}'
      summary: 'Detailed status / health check for the service'
      operationId: status
      responses:
        '200':
          description: 'OK'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
        '500':
          description: 'Internal Error'
          content:
            text/plain:
              schema:
                type: string

  /solr/{collection}/select:
    get:
      tags:
        - '${project.name}'
      summary: 'Perform a Solr-compatible search in the stated collection'
      operationId: solrSearch
      parameters:

        - name: collection
          in: path
          description: 'The ID of the Solr collection to search. Available collections can be requested from /solr/admin/collections'
          required: true
          schema:
            type: string
            default: 'ds'
            example: 'ds'

        - name: q
          in: query
          description: 'Solr query param [q](https://solr.apache.org/guide/8_10/the-standard-query-parser.html#standard-query-parser-parameters)'
          required: true
          schema:
            type: string
            default: '*:*'
          examples:
            all:
              value: '*:*'
              summary: 'All documents in the collection'
            free:
              value: 'jens hansen'
              summary: 'Free text query'
            qualified:
              value: 'author:andersen'
              summary: 'Qualified query'

        - name: fq
          in: query
          description: | 
            Solr filter query param [fq](https://solr.apache.org/guide/8_10/common-query-parameters.html#fq-filter-query-parameter)
            
            Standard query syntax, but all terms must be qualified. Does not affect scoring.
            If multiple filter queries are provided, the result set is the intersection of the filters.
            
          required: false
          schema:
            type: array
            items:
              type: string

        - name: rows
          in: query
          description: | 
            Solr rows param [rows](https://solr.apache.org/guide/8_10/common-query-parameters.html#rows-parameter)
            
            The number of documents to return. The default depends on the backing Solr setup, but is typically 10.
          required: false
          schema:
            type: integer
            format: int32
            example: 10
            default: 10

        - name: start
          in: query
          description: | 
            For pagination. Only return documents in the resultset from position start and forward. Next page typical start from 20                        
          required: false
          schema:
            type: integer
            format: int32            
            default: 0
          examples:
            from0:
              value: 0
              summary: 'from start'
            from20:
              value: 20
              summary: 'from document 20'
            
        - name: fl
          in: query
          description: | 
            Solr field list param [fl](https://solr.apache.org/guide/8_10/common-query-parameters.html#fl-field-list-parameter)            
            Solr fields to return in the response. `*` means all available standard fields.
            It is recommended to include the pseudo-field [[child]](https://solr.apache.org/guide/8_0/transforming-result-documents.html#child-childdoctransformerfactory)
            to include nested documents.
          required: false
          schema:
            type: string
            example: '*'
            default: '*'

        - name: facet
          in: query
          description: | 
            Solr facet enabling [facet](https://solr.apache.org/guide/8_10/faceting.html#general-facet-parameters)
            
            If true, faceting will be enabled. This is typically used together with `facet.field`
          required: false
          schema:
            type: string
            enum: ['true', 'false']
            default: 'false'
            example: 'false'

        - name: facet.field
          in: query
          description: | 
            Solr facet fields [facet.field](https://solr.apache.org/guide/8_10/faceting.html#field-value-faceting-parameters)
            
            If `facet=true`, the listed fields for `facet.fields` will be used for faceting.
          required: false
          schema:
            type: array
            items:
              type: string
            default: ['keyword']
            example: ['keyword']

        # TODO: Add more facet variables

        - name: q.op
          in: query
          description: | 
            Solr default operator param [q.op](https://solr.apache.org/guide/8_10/the-standard-query-parser.html#standard-query-parser-parameters)
            
            Controls whether the implicit boolean operator is `OR` or `AND`.
          required: false
          schema:
            type: string
            enum:  ['OR', 'AND']
            default: 'AND'
            example: 'AND'

        - name: wt
          in: query
          description: | 
            Solr response writer [wt](https://solr.apache.org/guide/8_10/response-writers.html)

            Controls whether the response delivery format. Common values (non exhaustive list) are
            
            * [json](https://solr.apache.org/guide/8_10/response-writers.html#json-response-writer) (default)
            * [csv](https://solr.apache.org/guide/8_10/response-writers.html#csv-response-writer)
            * [xml](https://solr.apache.org/guide/8_10/response-writers.html#standard-xml-response-writer)
          required: false
          schema:
            type: string
            default: 'json'
            example: 'json'

        - name: version
          in: query
          description: | 
            XML Response writer version [version](https://solr.apache.org/guide/8_11/response-writers.html#standard-xml-response-writer)
            
            Determines the XML protocol. Only supported value is 2.2.
            Not mandatory and only included here for completeness.
          required: false
          schema:
            type: string
            example: '2.2'

        - name: indent
          in: query
          description: | 
            Solr response writer [indent](https://solr.apache.org/guide/8_10/response-writers.html)
            If non-blank, "Solr will make some attempts at indenting".
          required: false
          schema:
            type: string
            enum: ['true', 'false']
            default: 'true'
            example: 'true'

        - name: debug
          in: query
          description: | 
            Solr debug param [debug](https://solr.apache.org/guide/8_10/common-query-parameters.html#debug-parameter)
            
            Used for debugging queries and timing. Documentation from Solr docs:
            * `query`:  Debug information about the query only
            * `timing`: Debug information about how long the query took to process
            * `results`: Debug information about the score results (also known as "explain")
            * `all`: All available debug information about the request request 
            * `true`: Backwards compatible version of `all`
          required: false
          schema:
            type: string
            enum:  ['query', 'timing', 'results', 'all', 'true', 'false']

        - name: debug.explain.structured
          in: query
          description: | 
            Solr debug param [debug](https://solr.apache.org/guide/8_10/common-query-parameters.html#debug-parameter)
            
            Solr Doc: Return debug information as nested data structures native to the response format requested by `wt`.
          required: false
          schema:
            type: string

      responses:
        '200':
          description: 'Structured Solr response'
          content:
            application/json:
              schema:
                description: |
                  Output compatible with [Solr JSON response](https://solr.apache.org/guide/8_10/response-writers.html#json-response-writer)
                type: string
            application/xml:
              schema:
                description: |
                  Output compatible with [Solr XML response](https://solr.apache.org/guide/8_10/response-writers.html#standard-xml-response-writer)
                type: string
            text/csv:
              schema:
                description: |
                  Output compatible with [Solr CSV response](https://solr.apache.org/guide/8_10/response-writers.html#csv-response-writer)
                type: string

  /solr/admin/collections:
    get:
      tags:
        - '${project.name}'
      summary: 'Solr [Collection Management Commands](https://solr.apache.org/guide/8_10/collection-management.html)'
      operationId: collectionAction
      parameters:
        - name: action
          in: query
          description: | 
            Collection-action to perform. Note that some actions require high-level permissions:
            * [LIST](https://solr.apache.org/guide/8_10/collection-management.html#list)
            * [DELETE](https://solr.apache.org/guide/8_10/collection-management.html#delete)
          required: true
          schema:
            type: string
            enum:  ['LIST', 'DELETE']
            example: 'LIST'
            default: 'LIST'
        - name: name
          in: query
          description: | 
            Mandatory for the action [DELETE](https://solr.apache.org/guide/8_10/collection-management.html#delete)
            The name of the collection to delete.
          required: false
          schema:
            type: string
            example: 'ds'
        - name: async
          in: query
          description: | 
            Optional for the action [DELETE](https://solr.apache.org/guide/8_10/collection-management.html#delete)
            Request ID to track this action which will be processed asynchronously.
          required: false
          schema:
            type: string
      responses:
        '200':
          description: 'JSON structure with Solr collection action response'
          content:
            application/json:
              schema:
                type: string

  /solr/admin/configs:
    get:
      tags:
        - '${project.name}'
      summary: 'Solr [Configsets Commands](https://solr.apache.org/guide/8_10/configsets-api.html)'
      operationId: configAction
      parameters:
        - name: action
          in: query
          description: | 
            Configset-action to perform. Note that some actions require high-level permissions:
            * [LIST](https://solr.apache.org/guide/8_10/configsets-api.html#configsets-list)
            * [DELETE](https://solr.apache.org/guide/8_10/configsets-api.html#configsets-delete)
          required: true
          schema:
            type: string
            enum:  ['LIST', 'DELETE']
            example: 'LIST'
            default: 'LIST'
        - name: name
          in: query
          description: | 
            Mandatory for the action [DELETE](https://solr.apache.org/guide/8_10/configsets-api.html#configsets-delete)
            The name of the configset to delete.
          required: false
          schema:
            type: string
            example: 'ds-conf'
      responses:
        '200':
          description: 'JSON structure with Solr configset action response'
          content:
            application/json:
              schema:
                type: string

components:
  schemas:

    # Sample status component. Adjust this to provide application specific status
    # such as a list of running jobs or free disk space
    Status:
      type: object
      required:
        - application
        - version
      properties:
        application:
          type: string
          description: 'The name of the application'
          example: 'MyService'
        version:
          type: string
          description: 'The version of the application'
          example: '1.2.3'
        build:
          type: string
          description: 'When the application was build'
          example: '2022-04-21T13:37:16Z'
        java:
          type: string
          description: 'The Java version that runs the container'
          example: '11.0.11'
        heap:
          type: integer
          format: int64
          description: 'The maximum number of bytes available to the container in megabytes'
          example: '4096'
        server:
          type: string
          description: 'The hostname for the server'
          example: 'miaplacidus'
        health:
          type: string
          description: 'Self diagnosed health'
          example: 'ok'

    Error:
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
